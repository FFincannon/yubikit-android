apply plugin: 'maven-publish'

version = libraryVersion

afterEvaluate {
    generateDebugBuildConfig.enabled = false
    generateReleaseBuildConfig.enabled = false
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    configurations.implementation.setCanBeResolved(true)
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

// build a jar with source
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
publishing {
    publications {
        aar(MavenPublication) {
            groupId publishedGroupId
            artifactId artifact
            version libraryVersion
            artifact javadocJar
            artifact sourcesJar
            artifact "${project.buildDir}/outputs/aar/${project.name}-release.aar"

            //generate pom nodes for dependencies
            pom {
                name = libraryName
                description = libraryDescription
                url = siteUrl
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = gitUrl
                    developerConnection = gitUrl
                    url = siteUrl
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    //Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                        {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}
